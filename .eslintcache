[{"C:\\Users\\DESKTOP\\Desktop\\projects\\FrontEnd Dev\\chatApp\\client\\src\\index.js":"1","C:\\Users\\DESKTOP\\Desktop\\projects\\FrontEnd Dev\\chatApp\\client\\src\\App.js":"2","C:\\Users\\DESKTOP\\Desktop\\projects\\FrontEnd Dev\\chatApp\\client\\src\\components\\Join\\Join.jsx":"3","C:\\Users\\DESKTOP\\Desktop\\projects\\FrontEnd Dev\\chatApp\\client\\src\\components\\InfoBar\\InfoBar.jsx":"4","C:\\Users\\DESKTOP\\Desktop\\projects\\FrontEnd Dev\\chatApp\\client\\src\\components\\Chat\\Chat.jsx":"5","C:\\Users\\DESKTOP\\Desktop\\projects\\FrontEnd Dev\\chatApp\\client\\src\\components\\Input\\Input.jsx":"6","C:\\Users\\DESKTOP\\Desktop\\projects\\FrontEnd Dev\\chatApp\\client\\src\\components\\Messages\\Messages.jsx":"7","C:\\Users\\DESKTOP\\Desktop\\projects\\FrontEnd Dev\\chatApp\\client\\src\\components\\Messages\\Message\\Message.jsx":"8","C:\\Users\\DESKTOP\\Desktop\\projects\\FrontEnd Dev\\chatApp\\client\\src\\components\\TextContainer\\TextContainer.jsx":"9"},{"size":151,"mtime":1616163090262,"results":"10","hashOfConfig":"11"},{"size":363,"mtime":1616097605077,"results":"12","hashOfConfig":"11"},{"size":975,"mtime":1616501094642,"results":"13","hashOfConfig":"11"},{"size":629,"mtime":1616391842898,"results":"14","hashOfConfig":"11"},{"size":2361,"mtime":1616662393924,"results":"15","hashOfConfig":"11"},{"size":655,"mtime":1616660265008,"results":"16","hashOfConfig":"11"},{"size":430,"mtime":1616276236311,"results":"17","hashOfConfig":"11"},{"size":1156,"mtime":1616276416882,"results":"18","hashOfConfig":"11"},{"size":1128,"mtime":1616662471211,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1bpl99w",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"C:\\Users\\DESKTOP\\Desktop\\projects\\FrontEnd Dev\\chatApp\\client\\src\\index.js",[],["40","41"],"C:\\Users\\DESKTOP\\Desktop\\projects\\FrontEnd Dev\\chatApp\\client\\src\\App.js",[],"C:\\Users\\DESKTOP\\Desktop\\projects\\FrontEnd Dev\\chatApp\\client\\src\\components\\Join\\Join.jsx",[],"C:\\Users\\DESKTOP\\Desktop\\projects\\FrontEnd Dev\\chatApp\\client\\src\\components\\InfoBar\\InfoBar.jsx",[],"C:\\Users\\DESKTOP\\Desktop\\projects\\FrontEnd Dev\\chatApp\\client\\src\\components\\Chat\\Chat.jsx",["42"],"import React, { useState, useEffect } from 'react';\r\nimport queryString from 'query-string';\r\nimport io from 'socket.io-client';\r\nimport InfoBar from '../InfoBar/InfoBar';\r\nimport Input from '../Input/Input';\r\nimport Messages from '../Messages/Messages';\r\nimport TextContainer from '../TextContainer/TextContainer';\r\n\r\nimport './Chat.css';\r\n\r\nconst ENDPOINT = 'https://react-chat-nd.herokuapp.com/';\r\n// const ENDPOINT = 'http://localhost:5000';\r\nlet socket;\r\n\r\nconst Chat = ({ location }) => {\r\n    const [name, setName] = useState('');\r\n    const [room, setRoom] = useState('');\r\n    const [users, setUsers] = useState('');\r\n    const [message, setMessage] = useState('');\r\n    const [messages, setMessages] = useState([]);\r\n\r\n\r\n    const connectionOptions = {\r\n        \"force new connection\": true,\r\n        \"reconnectionAttempts\": \"Infinity\",\r\n        \"timeout\": 10000,\r\n        \"transports\": [\"websocket\"]\r\n    };\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const { name, room } = queryString.parse(location.search);\r\n\r\n        // socket = io(ENDPOINT);\r\n        socket = io.connect(ENDPOINT, connectionOptions);\r\n\r\n        setName(name);\r\n        setRoom(room);\r\n\r\n        socket.emit('join', { name, room }, (error) => {\r\n            if (error) {\r\n                alert(error);\r\n            }\r\n        });\r\n\r\n        // return () => {\r\n        //     socket.emit('disconnect');\r\n\r\n        //     socket.off();\r\n        // }\r\n\r\n    }, [ENDPOINT, location.search]);\r\n\r\n    useEffect(() => {\r\n        socket.on('message', (message) => {\r\n            setMessages(messages => [...messages, message]);\r\n        });\r\n\r\n        socket.on('roomData', ({ users }) => {\r\n            setUsers(users);\r\n        });\r\n    }, []);\r\n\r\n    const sendMessage = (event) => {\r\n        event.preventDefault();\r\n\r\n        if (message) {\r\n            socket.emit('sendMessage', message, () => setMessage(''));\r\n\r\n        }\r\n    }\r\n\r\n    console.log(message, messages);\r\n\r\n    return (\r\n\r\n        <div className=\"outerContainer\">\r\n            <div className=\"container\">\r\n                <InfoBar room={room} />\r\n                <Messages messages={messages} name={name} />\r\n                <Input message={message} setMessage={setMessage} sendMessage={sendMessage} />\r\n\r\n            </div>\r\n            <TextContainer users={users} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chat;","C:\\Users\\DESKTOP\\Desktop\\projects\\FrontEnd Dev\\chatApp\\client\\src\\components\\Input\\Input.jsx",[],"C:\\Users\\DESKTOP\\Desktop\\projects\\FrontEnd Dev\\chatApp\\client\\src\\components\\Messages\\Messages.jsx",[],"C:\\Users\\DESKTOP\\Desktop\\projects\\FrontEnd Dev\\chatApp\\client\\src\\components\\Messages\\Message\\Message.jsx",[],"C:\\Users\\DESKTOP\\Desktop\\projects\\FrontEnd Dev\\chatApp\\client\\src\\components\\TextContainer\\TextContainer.jsx",[],{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":53,"column":8,"nodeType":"49","endLine":53,"endColumn":35,"suggestions":"50"},"no-native-reassign",["51"],"no-negated-in-lhs",["52"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'connectionOptions'. Either include it or remove the dependency array. Outer scope values like 'ENDPOINT' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["53"],"no-global-assign","no-unsafe-negation",{"desc":"54","fix":"55"},"Update the dependencies array to be: [connectionOptions, location.search]",{"range":"56","text":"57"},[1435,1462],"[connectionOptions, location.search]"]